// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// Troup Model
model Troup {
    id          String       @id @default(cuid())
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
    members     Int          @default(1)
    maxMembers  Int          @default(25)
    profile     TroupProfile
    primaryUser User
}

model TroupProfile {
    id         String   @id @default(cuid())
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    name       String   @unique
    adminEmail String?
    address    String?
    troup      Troup
}

// User Models
model User {
    id               String      @id @default(cuid())
    createdAt        DateTime    @default(now())
    updatedAt        DateTime    @updatedAt
    email            String      @unique
    password         String
    profile          UserProfile
    roles            Role[]
    troups           Troup[]
    createdTodos     Task[]      @relation("_Todo_Task_Author")
    contributedTodos Task[]      @relation("_Todo_Task_Contributor")
    ownedTodos       Task[]      @relation("_Todo_Task_Owner")
    createdPosts     Post[]      @relation("_Post_Author")
    contributedPosts Post[]      @relation("_Post_Contributor")
}

model UserProfile {
    id                     String   @id @default(cuid())
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    firstName              String
    lastName               String
    isSuperAdmin           Boolean  @default(false)
    professionalCompetence String?
    referral               User?
    utm_source             String?
    utm_campaign           String?
    utm_medium             String?
    utm_term               String?
    utm_content            String?
}

// Post Models
model Post {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    published       Boolean?          @default(value: false)
    title           String
    content         String
    label           Label[]
    author          User              @relation("_Post_Author")
    contributors    User[]            @relation("_Post_Contributor")
    troup           Troup             @relation("_Post_Parent")
    revisionHistory RevisionHistory[]
}

model Comment {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    content         String            @default("")
    troup           Troup
    author          User
    post            Post              @relation("_Comment_Parent")
    revisionHistory RevisionHistory[]
}

// Todo Models
model Todo {
    id        String       @id @default(cuid())
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt
    members   User[]
    columns   TodoColumn[]
}

model TodoColumn {
    id              String            @id @default(cuid())
    createdAt       DateTime          @default(now())
    updatedAt       DateTime          @updatedAt
    name            String
    revisionHistory RevisionHistory[]
}

model Task {
    id           String   @id @default(cuid())
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    author       User     @relation("_Todo_Task_Author")
    assignee     User     @relation("_Todo_Task_Owner")
    contributors User[]   @relation("_Todo_Task_Contributor")
    state        State    @default(ACTIVE)
}

// Supporting models
model Label {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    title     String
    color     String
    type      LabelType @default(GLOBAL)
    troup     Troup
    todo      Todo?
}

model Role {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    troup     Troup     @relation(references: [id])
    user      User      @relation(references: [id])
    value     RoleValue @default(CONTRIBUTOR)
}

model RevisionHistory {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    content   String   @default("")
    updatedBy User
}

model StateHistory {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    state     State    @default(ACTIVE)
}

// Enums
enum RoleValue {
    SUPER_ADMIN ADMIN MODERATOR CONTRIBUTOR
}

enum State {
    ACTIVE INACTIVE CHURNING ARCHIVED
}

enum LabelType {
    GLOBAL SPECIFIC
}